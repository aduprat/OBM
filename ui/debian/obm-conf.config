#!/bin/bash
#Produit toute les question lors de l'installation du paquet
#Les réponses peuvent être utilisé dans les scripts postinst
#, preinst, postrm, prerm


set -e


# Source debconf library.
. /usr/share/debconf/confmodule

is_initial_configuration() { 
# Check if this is the initial configuration and not an upgrade of an 
# existing configuration 
# Usage: if is_initial_configuration "$@"; then ... fi from top level 

# Plain installation 
  if [ "$1" = configure ] && [ -z "$2" ]; then 
    return 0 
  fi 
# Configuration via dpkg-reconfigure 
  if [ "$1" = reconfigure ] || [ "$DEBCONF_RECONFIGURE" ]; then 
    return 0 
  fi 
  return 1 
}


isnot_reconfigure_configuration() {
# Check if this is the dpkg-reconfiguration and not an upgrade of an 
# existing configuration 

# Configuration via dpkg-reconfigure 
  if [ "$1" = reconfigure ] || [ "$DEBCONF_RECONFIGURE" ]; then
    return 1
  fi
  return 0
}

check_alphanumeric() {
  DB_RET=$1
  DB_NAME=$2
  while [[ -z "$DB_RET" || $(echo $DB_RET | tr -d '[:alnum:]') ]] ; do
    db_input high obm-conf/${DB_NAME} || true
    db_go || true 
    db_get obm-conf/${DB_NAME} || true
    DB_RET="$RET"
  done
}

if [ -n "$2" ] && dpkg --compare-versions "$2" lt 2.2.0-0; then
  #get old debconf variable and insert into new
  db_get obm-conf/mysqlserver || true
  db_set obm-conf/dbhost $RET || true
  db_fset obm-conf/dbhost seen true || true

  db_get obm-conf/mysqldb || true
  db_set obm-conf/dbname $RET || true
  db_fset obm-conf/dbname seen true || true

  db_get obm-conf/mysqluser || true
  db_set obm-conf/dbuser $RET || true
  db_fset obm-conf/dbuser seen true || true

  db_get obm-conf/mysqlpasswd || true
  PASSWORD=$RET
  db_set obm-conf/dbpasswd $PASSWORD || true
  db_fset obm-conf/dbpasswd seen true || true
  db_set obm-conf/dbpasswd_verify $PASSWORD
  db_fset obm-conf/dbpasswd_verify seen true || true


  db_set obm-conf/dbtype MYSQL || true
  db_fset obm-conf/dbtype seen true || true

fi

#Warning To reconfigure package about other package
if [ "$1" = reconfigure ] || [ "$DEBCONF_RECONFIGURE" ]; then
    db_input high obm-conf/infoexternalurl
    db_go || true
fi

db_input high obm-conf/externalurl || true
db_input high obm-conf/ldapserver || true
db_input low obm-conf/module_obmldap || true
db_input low obm-conf/module_obmmail || true
db_input low obm-conf/module_obmsamba || true
db_input low obm-conf/module_obmweb || true
db_input low obm-conf/module_obmcontact || true
db_go || true

if isnot_reconfigure_configuration "$@"; then
  db_input high obm-conf/dbtype || true
  db_input high obm-conf/dbhost || true
 
  db_input high obm-conf/dbname || true
  db_go || true
  db_get obm-conf/dbname || true
  DB_RET="$RET"
  check_alphanumeric $DB_RET "dbname"

  db_input high obm-conf/dbuser || true
  db_go || true
  db_get obm-conf/dbuser || true
  DB_RET="$RET"
  check_alphanumeric $DB_RET "dbuser"

  
  while [ ! ${have_app_pass} ] ; do
    #get password
    db_input high obm-conf/dbpasswd || true
    db_go || true
    db_get obm-conf/dbpasswd || true
    DB_RET="$RET"
    check_alphanumeric $DB_RET "dbpasswd"
    pass1=${DB_RET}
    #get password confirm
    db_input high obm-conf/dbpasswd_verify || true
    db_go || true
    db_get obm-conf/dbpasswd_verify || true
    pass2="$RET"
    #test if password match
    
    if [ "${pass1}" = "${pass2}" ]; then
      have_app_pass="yes"
    else
      db_input high obm-conf/passwords-do-not-match || true
      db_go || true
    fi
  done
fi


exit 0

